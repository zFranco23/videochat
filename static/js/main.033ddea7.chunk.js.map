{"version":3,"sources":["SocketContext.js","components/VideoPlayer.js","components/Options.js","components/Notifications.js","App.js","index.js"],"names":["SocketContext","createContext","socket","io","ContextProvider","children","useState","stream","setStream","me","setMe","call","setCall","callAccepted","setCallAccepted","callEnded","setCallEnded","name","setName","myVideo","useRef","userVideo","connectionRef","useEffect","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","current","srcObject","on","id","from","callerName","signal","isReceivedCall","Provider","value","callUser","peer","Peer","initiator","trickle","data","emit","userToCall","signalData","leaveCall","destroy","window","location","reload","answerCall","to","useStyles","makeStyles","theme","width","breakpoints","down","gridContainer","justifyContent","flexDirection","paper","padding","border","margin","VideoPlayer","useContext","classes","Grid","container","className","Paper","item","xs","md","Typography","variant","gutterBottom","playsInline","muted","ref","autoPlay","root","display","marginTop","Options","idToCall","setIdToCall","Container","elevation","noValidate","TextField","label","onChange","e","target","fullWidth","text","Button","color","startIcon","Assignment","fontSize","PhoneDisabled","onClick","Phone","Notifications","style","appBar","borderRadius","alignItems","image","marginLeft","wrapper","App","AppBar","position","align","ReactDOM","render","document","getElementById"],"mappings":"8PAKMA,EAAcC,0BAIdC,EAAQC,aAAG,yCAEXC,EAAkB,SAAC,GAAc,IAAbC,EAAY,EAAZA,SAAY,EAETC,mBAAS,MAFA,mBAE3BC,EAF2B,KAEpBC,EAFoB,OAGjBF,mBAAS,IAHQ,mBAG3BG,EAH2B,KAGxBC,EAHwB,OAIbJ,mBAAS,IAJI,mBAI3BK,EAJ2B,KAItBC,EAJsB,OAKGN,oBAAS,GALZ,mBAK3BO,EAL2B,KAKdC,EALc,OAMHR,oBAAS,GANN,mBAM3BS,EAN2B,KAMjBC,EANiB,OAObV,mBAAS,IAPI,mBAO3BW,EAP2B,KAOtBC,EAPsB,KAS5BC,EAAUC,mBACVC,EAAUD,mBACVE,EAAcF,mBAGpBG,qBAAU,WAENC,UAAUC,aAAaC,aAAa,CAChCC,OAAO,EAAMC,OAAO,IACrBC,MAAK,SAACC,GACLtB,EAAUsB,GAEVX,EAAQY,QAAQC,UAAWF,KAG/B5B,EAAO+B,GAAG,MAAK,SAACC,GAAD,OAAMxB,EAAMwB,MAE3BhC,EAAO+B,GAAG,YAAW,YAAsC,IAAnCE,EAAkC,EAAlCA,KAAWC,EAAuB,EAA5BnB,KAAiBoB,EAAW,EAAXA,OAC3CzB,EAAQ,CAAE0B,gBAAe,EAAMH,OAAMlB,KAAKmB,EAAYC,gBAE5D,IAwDF,OACI,cAACrC,EAAcuC,SAAf,CAAwBC,MAAO,CAC3B7B,OACAE,eACAM,UACAE,YACAd,SACAU,OACAC,UACAH,YACAN,KACAgC,SA1CS,SAACP,GACd,IAAMQ,EAAO,IAAIC,IAAK,CAClBC,WAAU,EACVC,SAAQ,EACRtC,WAGJmC,EAAKT,GAAG,UAAS,SAACa,GACd5C,EAAO6C,KAAK,WAAW,CAAEC,WAAWd,EAAIe,WAAYH,EAAOX,KAAM1B,EAAKQ,YAG1EyB,EAAKT,GAAG,UAAS,SAACH,GACdT,EAAUU,QAAQC,UAAUF,KAGhC5B,EAAO+B,GAAG,gBAAe,SAACI,GACtBvB,GAAgB,GAEhB4B,EAAKL,OAAOA,MAEhBf,EAAcS,QAAQW,GAuBlBQ,UApBU,WACdlC,GAAa,GACbM,EAAcS,QAAQoB,UAGtBC,OAAOC,SAASC,UAgBZC,WAnEW,WACfzC,GAAgB,GAGhB,IAAM4B,EAAO,IAAIC,IAAK,CAClBC,WAAU,EACVC,SAAQ,EACRtC,WAIJmC,EAAKT,GAAG,UAAS,SAACa,GACd5C,EAAO6C,KAAK,aAAa,CAAEV,OAAOS,EAAMU,GAAG7C,EAAKwB,UAGpDO,EAAKT,GAAG,UAAS,SAACH,GACdT,EAAUU,QAAQC,UAAUF,KAGhCY,EAAKL,OAAO1B,EAAK0B,QACjBf,EAAcS,QAAQW,IAmCtB,SAcKrC,K,qDC1GPoD,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrChC,MAAM,aACJiC,MAAO,SACND,EAAME,YAAYC,KAAK,MAAQ,CAC9BF,MAAO,UAGXG,cAAc,aACZC,eAAgB,UACfL,EAAME,YAAYC,KAAK,MAAQ,CAC9BG,cAAe,WAGnBC,MAAO,CACLC,QAAS,OACTC,OAAQ,kBACRC,OAAQ,YAyCCC,MArCf,WAAwB,IAAD,EAEuDC,qBAAWvE,GAA7EiB,EAFW,EAEXA,KAAMJ,EAFK,EAELA,aAAcM,EAFT,EAESA,QAASE,EAFlB,EAEkBA,UAAWN,EAF7B,EAE6BA,UAAWR,EAFxC,EAEwCA,OAAQI,EAFhD,EAEgDA,KAC7D6D,EAAQf,IACd,OACI,8BACI,eAACgB,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAWH,EAAQT,cAAnC,UAGQxD,GACI,cAACqE,EAAA,EAAD,CAAOD,UAAWH,EAAQN,MAA1B,SACI,eAACO,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,UAEI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,EAArC,SAAuCjE,GAAQ,SAC/C,uBAAOkE,aAAW,EAACC,OAAK,EAACC,IAAKlE,EAASmE,UAAQ,EAACX,UAAWH,EAAQ7C,aAQ/Ed,IAAiBE,GACb,cAAC6D,EAAA,EAAD,CAAOD,UAAWH,EAAQN,MAA1B,SACI,eAACO,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,UACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,EAArC,SAAuCvE,EAAKM,MAAQ,SACpD,uBAAOkE,aAAW,EAACE,IAAKhE,EAAWiE,UAAQ,EAACX,UAAWH,EAAQ7C,mB,8DC3CzF8B,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrC4B,KAAM,CACJC,QAAS,OACTvB,cAAe,UAEjBF,cAAc,aACZH,MAAO,QACND,EAAME,YAAYC,KAAK,MAAQ,CAC9BG,cAAe,WAGnBS,UAAU,aACRd,MAAO,QACPS,OAAQ,SACRF,QAAS,GACRR,EAAME,YAAYC,KAAK,MAAQ,CAC9BF,MAAO,QAGXS,OAAQ,CACNoB,UAAW,IAEbtB,QAAS,CACPA,QAAS,IAEXD,MAAO,CACLC,QAAS,YACTC,OAAQ,uBAgECsB,MA5Df,YAA8B,IAAZrF,EAAW,EAAXA,SAAW,EAEyCkE,qBAAWvE,GAAtES,EAFkB,EAElBA,GAAGI,EAFe,EAEfA,aAAaI,EAFE,EAEFA,KAAKC,EAFH,EAEGA,QAAQgC,EAFX,EAEWA,UAAUT,EAFrB,EAEqBA,SAAS1B,EAF9B,EAE8BA,UAF9B,EAGIT,mBAAS,IAHb,mBAGlBqF,EAHkB,KAGTC,EAHS,KAInBpB,EAAQf,IAEd,OACI,cAACoC,EAAA,EAAD,CAAWlB,UAAWH,EAAQE,UAA9B,SACI,eAACE,EAAA,EAAD,CAAOkB,UAAW,GAAInB,UAAWH,EAAQN,MAAzC,UACI,sBAAMS,UAAWH,EAAQe,KAAMQ,YAAU,EAAzC,SACI,eAACtB,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAWH,EAAQT,cAAnC,UACI,eAACU,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGJ,UAAWH,EAAQL,QAA7C,UACI,cAACa,EAAA,EAAD,CAAYE,cAAY,EAACD,QAAQ,KAAjC,0BACA,cAACe,EAAA,EAAD,CAAWC,MAAM,OAAOzD,MAAOvB,EAAMiF,SAAU,SAAAC,GAAC,OAAEjF,EAAQiF,EAAEC,OAAO5D,QAAQ6D,WAAS,IAEpF,cAAC,kBAAD,CAAiBC,KAAM7F,EAAIkE,UAAWH,EAAQH,OAA9C,SACI,cAACkC,EAAA,EAAD,CAAQtB,QAAQ,YAAYuB,MAAM,UAAUH,WAAS,EAACI,UAAW,cAACC,EAAA,EAAD,CAAYC,SAAS,UAAtF,+BAMR,eAAClC,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGJ,UAAWH,EAAQL,QAA7C,UACI,cAACa,EAAA,EAAD,CAAYE,cAAY,EAACD,QAAQ,KAAjC,yBACA,cAACe,EAAA,EAAD,CAAWC,MAAM,aAAazD,MAAOmD,EAAUO,SAAU,SAAAC,GAAC,OAAEP,EAAYO,EAAEC,OAAO5D,QAAQ6D,WAAS,IACjGxF,IAAiBE,EAEV,cAACwF,EAAA,EAAD,CACItB,QAAQ,YACRuB,MAAM,YACNC,UAAW,cAACG,EAAA,EAAD,CAAeD,SAAS,UACnCN,WAAS,EACTQ,QAAS3D,EACTyB,UAAWH,EAAQH,OANvB,qBAYA,cAACkC,EAAA,EAAD,CACItB,QAAQ,YACRuB,MAAM,YACNC,UAAW,cAACK,EAAA,EAAD,CAAOH,SAAS,UAC3BN,WAAS,EACTQ,QAAS,kBAAIpE,EAASkD,IACtBhB,UAAWH,EAAQH,OANvB,0BAenBhE,QCvEF0G,MAhBf,WAA0B,IAAD,EACkBxC,qBAAWvE,GAA3CuD,EADc,EACdA,WAAW5C,EADG,EACHA,KAAKE,EADF,EACEA,aACvB,OACI,mCACKF,EAAK2B,iBAAmBzB,GACrB,sBAAKmG,MAAO,CAACxB,QAAQ,OAAQxB,eAAe,UAA5C,UACI,+BAAKrD,EAAKM,KAAV,iBACA,cAACsF,EAAA,EAAD,CAAQtB,QAAQ,YAAYuB,MAAM,UAAUK,QAAStD,EAArD,0BCLdE,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCsD,OAAO,aACLC,aAAc,GACd7C,OAAQ,aACRmB,QAAS,OACTvB,cAAe,MACfD,eAAgB,SAChBmD,WAAY,SACZvD,MAAO,QACPQ,OAAQ,mBAEPT,EAAME,YAAYC,KAAK,MAAQ,CAC9BF,MAAO,QAGXwD,MAAO,CACLC,WAAY,QAEdC,QAAS,CACP9B,QAAS,OACTvB,cAAe,SACfkD,WAAY,SACZvD,MAAO,YAmBE2D,MAff,WACI,IAAM/C,EAAQf,IACd,OACI,sBAAKkB,UAAWH,EAAQ8C,QAAxB,UACI,cAACE,EAAA,EAAD,CAAQ7C,UAAWH,EAAQyC,OAAQQ,SAAS,SAASjB,MAAM,UAA3D,SACI,cAACxB,EAAA,EAAD,CAAYC,QAAQ,KAAKyC,MAAM,SAA/B,0BAEJ,cAAC,EAAD,IACA,cAAC,EAAD,UACI,cAAC,EAAD,U,OCnChBC,IAASC,OACL,cAAC,EAAD,UACI,cAAC,EAAD,MAEHC,SAASC,eAAe,W","file":"static/js/main.033ddea7.chunk.js","sourcesContent":["import React,{createContext,useState,useRef,useEffect} from 'react';\r\nimport {io} from 'socket.io-client';\r\nimport Peer from 'simple-peer';\r\n\r\n\r\nconst SocketContext=createContext();\r\n\r\n//Instancia inicial del socket.io\r\n\r\nconst socket =io(\"https://back-video-chat.herokuapp.com\")//Dentro va el server\r\n\r\nconst ContextProvider = ({children})=>{\r\n\r\n    const [stream,setStream]=useState(null);\r\n    const [me,setMe]=useState(\"\");\r\n    const [call,setCall]=useState({})\r\n    const [callAccepted,setCallAccepted]=useState(false);\r\n    const [callEnded,setCallEnded]=useState(false);\r\n    const [name,setName]=useState(\"\");\r\n\r\n    const myVideo = useRef();\r\n    const userVideo=useRef();\r\n    const connectionRef=useRef();\r\n\r\n\r\n    useEffect(()=>{\r\n        //Al inicio debemos pedir permiso para usar el video y el audio.\r\n        navigator.mediaDevices.getUserMedia({\r\n            video :true, audio :true\r\n        }).then((currentStream)=>{\r\n            setStream(currentStream);\r\n\r\n            myVideo.current.srcObject= currentStream;\r\n        })\r\n        //Escuchar una acción\r\n        socket.on('me',(id)=>setMe(id));\r\n\r\n        socket.on('calluser',({ from, name:callerName, signal })=>{\r\n            setCall({ isReceivedCall:true, from, name:callerName, signal })\r\n        })\r\n    },[])\r\n\r\n    const answerCall = ()=>{\r\n        setCallAccepted(true);\r\n\r\n        //Crear un peer capaz de aceptar el video , con unas configuracioens\r\n        const peer = new Peer({\r\n            initiator:false,//Porque no se inicia una llamada , solo es una respuesta\r\n            trickle:false,\r\n            stream\r\n        })\r\n        //Una vez recibamos la señal\r\n        //Entrelazar con el socket con nuestros peers para finalmente establecer la video conexion\r\n        peer.on('signal',(data)=>{\r\n            socket.emit('answercall',{ signal:data, to:call.from }) //Enviar la data y quien esta llamando.\r\n        })\r\n\r\n        peer.on('stream',(currentStream)=>{\r\n            userVideo.current.srcObject=currentStream; //Stream de la otra persona\r\n        })\r\n\r\n        peer.signal(call.signal);\r\n        connectionRef.current=peer;\r\n    }\r\n\r\n    const callUser = (id)=>{\r\n        const peer = new Peer({\r\n            initiator:true,\r\n            trickle:false,\r\n            stream\r\n        })\r\n\r\n        peer.on('signal',(data)=>{\r\n            socket.emit('calluser',{ userToCall:id, signalData: data , from :me , name}) //Enviar la data y quien esta llamando.\r\n        })\r\n\r\n        peer.on('stream',(currentStream)=>{\r\n            userVideo.current.srcObject=currentStream; //Stream de la otra persona\r\n        })\r\n\r\n        socket.on(\"callaccepted\",(signal)=>{\r\n            setCallAccepted(true);\r\n\r\n            peer.signal(signal);\r\n        })\r\n        connectionRef.current=peer;\r\n    }\r\n\r\n    const leaveCall = ()=>{\r\n        setCallEnded(true);\r\n        connectionRef.current.destroy();\r\n\r\n        //Recargar la pagina y dar un nuevo id\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <SocketContext.Provider value={{\r\n            call,\r\n            callAccepted,\r\n            myVideo,\r\n            userVideo,\r\n            stream,\r\n            name,\r\n            setName,\r\n            callEnded,\r\n            me,\r\n            callUser,\r\n            leaveCall,\r\n            answerCall\r\n        }}>\r\n            {children}\r\n        </SocketContext.Provider>\r\n    )\r\n}\r\n\r\nexport {ContextProvider, SocketContext};","import React, { useContext } from 'react';\r\nimport {Grid, Typography, Paper, makeStyles}from '@material-ui/core';\r\n\r\nimport {SocketContext} from '../SocketContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    video: {\r\n      width: '550px',\r\n      [theme.breakpoints.down('xs')]: {\r\n        width: '300px',\r\n      },\r\n    },\r\n    gridContainer: {\r\n      justifyContent: 'center',\r\n      [theme.breakpoints.down('xs')]: {\r\n        flexDirection: 'column',\r\n      },\r\n    },\r\n    paper: {\r\n      padding: '10px',\r\n      border: '2px solid black',\r\n      margin: '10px',\r\n    },\r\n}));\r\n\r\nfunction VideoPlayer() {\r\n\r\n    const { name, callAccepted, myVideo, userVideo, callEnded, stream, call }=useContext(SocketContext);\r\n    const classes=useStyles();\r\n    return (\r\n        <div>\r\n            <Grid container className={classes.gridContainer}>\r\n                {/* our own video */}\r\n                {\r\n                    stream && ( \r\n                        <Paper className={classes.paper}>\r\n                            <Grid item xs={12} md={6}>\r\n                                {/* Ref es la conexion entre el stream y el video component */}\r\n                                <Typography variant=\"h5\" gutterBottom>{name || \"Name\"}</Typography>\r\n                                <video playsInline muted ref={myVideo} autoPlay className={classes.video}/>\r\n                            </Grid>\r\n                        </Paper>\r\n                    )\r\n                }\r\n\r\n                {/* users video */}\r\n                {\r\n                    callAccepted && !callEnded && (\r\n                        <Paper className={classes.paper}>\r\n                            <Grid item xs={12} md={6}>\r\n                                <Typography variant=\"h5\" gutterBottom>{call.name || \"Name\"}</Typography>\r\n                                <video playsInline ref={userVideo} autoPlay className={classes.video}/>\r\n                            </Grid>\r\n                        </Paper>\r\n                     )\r\n                }\r\n                \r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoPlayer\r\n","import React, { useContext, useState } from 'react';\r\nimport {Grid, Button, TextField, Typography, Container, Paper, makeStyles} from '@material-ui/core';\r\n\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport {Assignment, Phone, PhoneDisabled } from '@material-ui/icons';\r\n\r\nimport {SocketContext} from '../SocketContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n    },\r\n    gridContainer: {\r\n      width: '100%',\r\n      [theme.breakpoints.down('xs')]: {\r\n        flexDirection: 'column',\r\n      },\r\n    },\r\n    container: {\r\n      width: '600px',\r\n      margin: '35px 0',\r\n      padding: 0,\r\n      [theme.breakpoints.down('xs')]: {\r\n        width: '80%',\r\n      },\r\n    },\r\n    margin: {\r\n      marginTop: 20,\r\n    },\r\n    padding: {\r\n      padding: 20,\r\n    },\r\n    paper: {\r\n      padding: '10px 20px',\r\n      border: '2px solid black',\r\n    },\r\n   }));\r\n\r\nfunction Options({children}) {\r\n\r\n    const {me,callAccepted,name,setName,leaveCall,callUser,callEnded}=useContext(SocketContext);\r\n    const [idToCall,setIdToCall]=useState(\"\");\r\n    const classes=useStyles();\r\n\r\n    return (\r\n        <Container className={classes.container}>\r\n            <Paper elevation={10} className={classes.paper}>\r\n                <form className={classes.root} noValidate>\r\n                    <Grid container className={classes.gridContainer}>\r\n                        <Grid item xs={12} md={6} className={classes.padding}>\r\n                            <Typography gutterBottom variant=\"h6\">Account Info</Typography>\r\n                            <TextField label=\"Name\" value={name} onChange={e=>setName(e.target.value)} fullWidth/>\r\n                            \r\n                            <CopyToClipboard text={me} className={classes.margin}>\r\n                                <Button variant=\"contained\" color=\"primary\" fullWidth startIcon={<Assignment fontSize=\"large\" />}>\r\n                                    Copy your ID\r\n                                </Button>\r\n                            </CopyToClipboard>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} md={6} className={classes.padding}>\r\n                            <Typography gutterBottom variant=\"h6\">Make a call</Typography>\r\n                            <TextField label=\"ID to call\" value={idToCall} onChange={e=>setIdToCall(e.target.value)} fullWidth/>\r\n                            {callAccepted && !callEnded ? \r\n                                (\r\n                                    <Button \r\n                                        variant=\"contained\" \r\n                                        color=\"secondary\" \r\n                                        startIcon={<PhoneDisabled fontSize=\"large\" />}\r\n                                        fullWidth\r\n                                        onClick={leaveCall}\r\n                                        className={classes.margin}\r\n                                    >\r\n                                        Hang Up\r\n                                    </Button>\r\n                                ) :\r\n                                (\r\n                                    <Button \r\n                                        variant=\"contained\" \r\n                                        color=\"secondary\" \r\n                                        startIcon={<Phone fontSize=\"large\" />}\r\n                                        fullWidth\r\n                                        onClick={()=>callUser(idToCall)}//Si no es el () => no espera el onclick y se realiza\r\n                                        className={classes.margin}\r\n                                    >\r\n                                        Call\r\n                                    </Button>\r\n                                ) \r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n                {children}\r\n            </Paper>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Options\r\n","import React, { useContext } from 'react';\r\nimport {Button} from '@material-ui/core'\r\n\r\nimport {SocketContext} from '../SocketContext'\r\n\r\n\r\nfunction Notifications() {\r\n    const {answerCall,call,callAccepted} = useContext(SocketContext);\r\n    return (\r\n        <>\r\n            {call.isReceivedCall && !callAccepted  && (\r\n                <div style={{display:\"flex\", justifyContent:\"center\"}}>\r\n                    <h1>{call.name} is calling</h1>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={answerCall}>\r\n                        Answer\r\n                    </Button>\r\n                </div> \r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Notifications\r\n","import React from 'react';\r\nimport {Typography,AppBar} from '@material-ui/core'\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nimport VideoPlayer from './components/VideoPlayer';\r\nimport Options from './components/Options';\r\nimport Notifications from './components/Notifications';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n      borderRadius: 15,\r\n      margin: '30px 100px',\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      width: '600px',\r\n      border: '2px solid black',\r\n  \r\n      [theme.breakpoints.down('xs')]: {\r\n        width: '90%',\r\n      },\r\n    },\r\n    image: {\r\n      marginLeft: '15px',\r\n    },\r\n    wrapper: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      width: '100%',\r\n    },\r\n  }));\r\n\r\nfunction App() {\r\n    const classes=useStyles();\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\r\n                <Typography variant=\"h2\" align=\"center\">Video Chat</Typography>\r\n            </AppBar>\r\n            <VideoPlayer />\r\n            <Options>\r\n                <Notifications />\r\n            </Options>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport {ContextProvider} from './SocketContext';\r\n\r\nimport App from './App';\r\nimport './styles.css'\r\n\r\nReactDOM.render(\r\n    <ContextProvider>\r\n        <App />\r\n    </ContextProvider>\r\n    ,document.getElementById(\"root\")\r\n);"],"sourceRoot":""}